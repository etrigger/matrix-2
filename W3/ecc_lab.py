# version code a33d9fd8b4cb+
coursera = 1
# Please fill out this stencil and submit using the provided submission script.

from vec import Vec
from mat import Mat
from bitutil import bits2mat, str2bits, noise
from GF2 import one
from matutil import listlist2mat

## Task 1
""" Create an instance of Mat representing the generator matrix G. You can use
the procedure listlist2mat in the matutil module (be sure to import first).
Since we are working over GF (2), you should use the value one from the
GF2 module to represent 1"""
G = listlist2mat([[one, 0,one,one],[one,one,0,one], [0,0,0,one],
                  [one,one,one,0],[0,0,one,0],[0,one,0,0],
                  [one,0,0,0]])

## Task 2
# Please write your answer as a list. Use one from GF2 and 0 as the elements.
encoding_1001 = [0,0,one,one,0,0,one]


## Task 3
# Express your answer as an instance of the Mat class.
R = Mat(({0, 1, 2, 3}, {0, 1, 2, 3, 4, 5, 6}), {(1, 2): 0, (3, 2): one,
    (0, 0): 0, (3, 0): one, (0, 4): 0, (1, 4): 0, (2, 6): one, (0, 5): 0,
    (2, 1): one, (2, 5): 0, (2, 0): one, (1, 0): one, (3, 5): 0, (0, 1): 0,
    (0, 2): 0, (3, 3): one, (0, 6): one, (3, 4): 0, (3, 1): one, (1, 6): one,
    (1, 1): one, (1, 5): one, (3, 6): one, (2, 2): 0, (1, 3): one, (2, 3): one,
    (0, 3): 0, (2, 4): one})

## Task 4
# Create an instance of Mat representing the check matrix H.
H = Mat(({0, 1, 2}, {0, 1, 2, 3, 4, 5, 6}), {(0, 1): 0, (1, 2): one,
        (2, 4): one, (0, 0): 0, (2, 6): one, (1, 5): one, (2, 2): one,
        (1, 1): one, (1, 4): 0, (0, 2): 0, (0, 6): one, (1, 3): 0, (0, 5): one,
        (2, 1): 0, (2, 5): 0, (0, 4): one, (2, 3): 0, (1, 6): one, (1, 0): 0,
        (2, 0): one, (0, 3): one})

## Task 5
def find_error(syndrome):
    """
    Input: an error syndrome as an instance of Vec
    Output: the corresponding error vector e
    Examples:
        >>> find_error(Vec({0,1,2}, {0:one})) == Vec({0, 1, 2, 3, 4, 5, 6},{3: one})
        True
        >>> find_error(Vec({0,1,2}, {2:one})) == Vec({0, 1, 2, 3, 4, 5, 6},{0: one})
        True
        >>> find_error(Vec({0,1,2}, {1:one, 2:one})) == Vec({0, 1, 2, 3, 4, 5, 6},{2: one})   
        True
        >>> find_error(Vec({0,1,2}, {})) == Vec({0,1,2,3,4,5,6}, {})
        True
    """
    r = Vec({0, 1, 2, 3, 4, 5, 6},{})
    d = mat2coldict(H)
    for k,v in d.items():
            if v == e:
                r[k]= one
    return r

## Task 6
# Use the Vec class for your answers.
non_codeword = Vec({0,1,2,3,4,5,6}, {0: one, 1:0, 2:one, 3:one, 4:0, 5:one, 6:one})
error_vector = Vec({0, 1, 2, 3, 4, 5, 6},{6: one})
code_word = Vec({0,1,2,3,4,5,6}, {0: one, 1:0, 2:one, 3:one, 4:0, 5:one, 6:0})
original = Vec({0, 1, 2, 3},{0: 0, 1: one, 2: 0, 3: one}) # R * code_word


## Task 7
def find_error_matrix(S):
    """
    Input: a matrix S whose columns are error syndromes
    Output: a matrix whose cth column is the error corresponding to the cth column of S.
    Example:
        >>> S = listlist2mat([[0,one,one,one],[0,one,0,0],[0,0,0,one]])
        >>> find_error_matrix(S) == Mat(({0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3}), {(1, 3): 0, (3, 0): 0, (2, 1): 0, (6, 2): 0, (5, 1): one, (0, 3): 0, (4, 0): 0, (1, 2): 0, (3, 3): 0, (6, 3): 0, (5, 0): 0, (2, 2): 0, (4, 1): 0, (1, 1): 0, (3, 2): one, (0, 0): 0, (6, 0): 0, (2, 3): 0, (4, 2): 0, (1, 0): 0, (5, 3): 0, (0, 1): 0, (6, 1): 0, (3, 1): 0, (2, 0): 0, (4, 3): one, (5, 2): 0, (0, 2): 0})
        True
    """
    d = mat2coldict(S)
    col = {}
    for k,v in d.items():
            col[k]= find_error(v)
    return coldict2mat(col)

## Task 8
s = "I'm trying to free your mind, Neo. But I can only show you the door. You're the one that has to walk through it."
P = Mat(({0, 1, 2, 3}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
    48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
    64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
    80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
    96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
    110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
    123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
    136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
    149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
    162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
    175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
    188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
    201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
    214, 215, 216, 217, 218, 219, 220, 221, 222, 223}), {(2, 208):
    one, (2, 210): one, (2, 212): one, (2, 41): one, (1, 215): one,
    (3, 170): one, (3, 52): one, (0, 210): one, (2, 202): one, (1,
    83): one, (1, 201): one, (1, 64): one, (1, 117): one, (3, 204):
    one, (0, 175): one, (3, 86): one, (0, 198): one, (2, 104): one,
    (0, 11): one, (1, 111): one, (1, 133): one, (1, 28): one, (0, 4):
    one, (1, 191): one, (0, 128): one, (2, 188): one, (2, 53): one,
    (1, 59): one, (0, 45): one, (2, 61): one, (3, 40): one, (2, 32):
    one, (1, 40): one, (1, 35): one, (0, 169): one, (1, 221): one, (2,
    197): one, (2, 90): one, (1, 89): one, (2, 73): one, (1, 115):
    one, (0, 183): one, (3, 198): one, (1, 21): one, (2, 157): one,
    (1, 131): one, (0, 148): one, (0, 14): one, (2, 1): one, (1, 15):
    one, (2, 183): one, (1, 165): one, (0, 138): one, (1, 60): one,
    (2, 162): one, (1, 33): one, (2, 209): one, (0, 160): one, (0,
    90): one, (2, 85): one, (1, 151): one, (2, 203): one, (2, 205):
    one, (1, 82): one, (2, 64): one, (0, 112): one, (2, 79): one, (2,
    173): one, (2, 122): one, (1, 121): one, (2, 105): one, (0, 182):
    one, (0, 18): one, (1, 132): one, (2, 148): one, (0, 9): one, (1,
    19): one, (2, 131): one, (1, 137): one, (3, 112): one, (2, 24):
    one, (2, 142): one, (1, 53): one, (2, 189): one, (1, 163): one,
    (3, 140): one, (0, 180): one, (2, 168): one, (2, 33): one, (1,
    47): one, (2, 215): one, (0, 208): one, (3, 60): one, (2, 91):
    one, (1, 193): one, (0, 119): one, (0, 192): one, (0, 122): one,
    (1, 77): one, (3, 94): one, (0, 38): one, (1, 103): one, (2, 111):
    one, (1, 157): one, (3, 218): one, (0, 172): one, (1, 130): one,
    (2, 19): one, (1, 25): one, (1, 183): one, (1, 199): one, (0, 50):
    one, (2, 13): one, (1, 51): one, (2, 163): one, (1, 169): one, (3,
    134): one, (3, 16): one, (2, 56): one, (2, 174): one, (2, 39):
    one, (1, 213): one, (2, 221): one, (0, 212): one, (0, 78): one,
    (2, 130): one, (1, 81): one, (2, 65): one, (1, 207): one, (0,
    144): one, (2, 207): one, (3, 178): one, (1, 70): one, (0, 100):
    one, (1, 75): one, (2, 123): one, (1, 109): one, (2, 149): one,
    (1, 155): one, (1, 18): one, (2, 128): one, (2, 25): one, (1, 7):
    one, (2, 143): one, (1, 189): one, (3, 4): one, (2, 4): one, (1,
    52): one, (2, 186): one, (1, 162): one, (2, 220): one, (2, 51):
    one, (1, 57): one, (2, 169): one, (3, 128): one, (2, 62): one, (0,
    82): one, (2, 45): one, (1, 211): one, (2, 195): one, (3, 48):
    one, (1, 192): one, (0, 72): one, (1, 95): one, (2, 71): one, (2,
    114): one, (0, 110): one, (1, 113): one, (2, 97): one, (0, 130):
    one, (1, 107): one, (2, 155): one, (1, 129): one, (3, 120): one,
    (2, 16): one, (1, 24): one, (0, 0): one, (1, 182): one, (2, 153):
    one, (2, 31): one, (1, 13): one, (2, 181): one, (1, 187): one, (0,
    140): one, (2, 171): one, (2, 160): one, (1, 39): one, (2, 175):
    one, (3, 154): one, (1, 212): one, (2, 83): one, (0, 143): one,
    (3, 160): one, (0, 221): one, (2, 94): one, (1, 206): one, (0,
    114): one, (1, 69): one, (0, 203): one, (0, 101): one, (0, 104):
    one, (1, 127): one, (2, 103): one, (1, 149): one, (1, 17): one,
    (2, 129): one, (1, 143): one, (2, 22): one, (2, 140): one, (1,
    188): one, (2, 5): one, (1, 11): one, (2, 187): one, (1, 161):
    one, (3, 24): one, (2, 48): one, (0, 32): one, (2, 63): one, (1,
    45): one, (2, 213): one, (2, 42): one, (2, 192): one, (0, 142):
    one, (0, 73): one, (0, 194): one, (1, 67): one, (2, 115): one, (0,
    111): one, (3, 64): one, (1, 112): one, (2, 126): one, (0, 207):
    one, (1, 101): one, (1, 147): one, (3, 102): one, (1, 106): one,
    (2, 152): one, (1, 128): one, (2, 17): one, (1, 31): one, (1,
    181): one, (3, 12): one, (2, 28): one, (2, 11): one, (1, 49): one,
    (2, 161): one, (1, 175): one, (2, 54): one, (0, 42): one, (1, 43):
    one, (2, 219): one, (3, 56): one, (0, 64): one, (1, 87): one, (2,
    95): one, (1, 205): one, (0, 115): one, (0, 164): one, (2, 74):
    one, (2, 134): one, (0, 39): one, (2, 121): one, (3, 90): one, (1,
    99): one, (2, 147): one, (1, 153): one, (3, 214): one, (3, 96):
    one, (1, 16): one, (0, 24): one, (2, 23): one, (1, 5): one, (2,
    141): one, (1, 179): one, (2, 2): one, (1, 10): one, (0, 62): one,
    (1, 160): one, (2, 49): one, (1, 63): one, (3, 130): one, (2, 60):
    one, (1, 44): one, (0, 84): one, (2, 43): one, (1, 209): one, (2,
    193): one, (3, 50): one, (2, 86): one, (1, 198): one, (1, 93):
    one, (1, 203): one, (3, 78): one, (0, 218): one, (1, 66): one, (2,
    112): one, (0, 96): one, (0, 34): one, (1, 119): one, (2, 127):
    one, (1, 100): one, (2, 106): one, (1, 146): one, (1, 105): one,
    (0, 31): one, (1, 135): one, (3, 208): one, (1, 30): one, (0, 2):
    one, (2, 29): one, (1, 3): one, (2, 179): one, (1, 185): one, (3,
    0): one, (2, 8): one, (2, 55): one, (1, 37): one, (0, 43): one,
    (3, 38): one, (2, 34): one, (2, 18): one, (1, 223): one, (2, 199):
    one, (3, 162): one, (1, 86): one, (2, 92): one, (0, 211): one, (1,
    91): one, (2, 75): one, (0, 139): one, (2, 118): one, (0, 106):
    one, (1, 125): one, (2, 101): one, (3, 196): one, (3, 110): one,
    (1, 23): one, (1, 141): one, (0, 12): one, (0, 133): one, (1, 9):
    one, (1, 167): one, (2, 164): one, (1, 217): one, (0, 187): one,
    (0, 40): one, (2, 211): one, (2, 40): one, (1, 208): one, (2,
    222): one, (2, 87): one, (1, 197): one, (0, 75): one, (3, 188):
    one, (1, 92): one, (2, 66): one, (1, 65): one, (2, 113): one, (1,
    73): one, (0, 97): one, (3, 66): one, (0, 153): one, (0, 13): one,
    (1, 123): one, (2, 107): one, (3, 222): one, (3, 104): one, (1,
    104): one, (1, 134): one, (1, 29): one, (2, 133): one, (3, 14):
    one, (0, 156): one, (1, 2): one, (2, 9): one, (1, 55): one, (1,
    173): one, (3, 138): one, (2, 52): one, (2, 35): one, (1, 41):
    one, (3, 144): one, (1, 222): one, (2, 196): one, (1, 85): one,
    (2, 93): one, (1, 195): one, (1, 90): one, (2, 72): one, (2, 119):
    one, (0, 107): one, (3, 92): one, (0, 145): one, (1, 97): one, (0,
    23): one, (1, 159): one, (1, 219): one, (2, 156): one, (1, 140):
    one, (0, 147): one, (1, 27): one, (2, 139): one, (1, 177): one,
    (0, 48): one, (2, 15): one, (2, 165): one, (1, 171): one, (0,
    193): one, (0, 188): one})

## Task 9
C = Mat(({0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
223}), {(5, 31): one, (1, 215): one, (4, 173): one, (5, 57): one, (0,
197): one, (1, 201): one, (4, 66): one, (1, 64): one, (2, 78): one,
(4, 203): one, (5, 195): one, (6, 211): one, (6, 72): one, (4, 104):
one, (1, 122): one, (2, 104): one, (3, 193): one, (4, 209): one, (0,
17): one, (4, 118): one, (1, 28): one, (2, 130): one, (0, 55): one,
(1, 191): one, (3, 2): one, (0, 128): one, (2, 188): one, (4, 5): one,
(4, 142): one, (5, 24): one, (3, 40): one, (1, 40): one, (2, 214):
one, (6, 23): one, (3, 147): one, (4, 35): one, (5, 187): one, (4,
148): one, (0, 220): one, (1, 194): one, (3, 185): one, (4, 73): one,
(1, 89): one, (0, 121): one, (4, 87): one, (5, 93): one, (6, 101):
one, (3, 101): one, (1, 21): one, (5, 103): one, (3, 11): one, (1,
15): one, (2, 12): one, (1, 170): one, (6, 145): one, (0, 189): one,
(1, 33): one, (6, 14): one, (3, 152): one, (4, 42): one, (2, 38): one,
(0, 90): one, (4, 147): one, (5, 43): one, (1, 219): one, (6, 32):
one, (4, 48): one, (2, 64): one, (0, 112): one, (5, 53): one, (4, 94):
one, (3, 207): one, (4, 199): one, (5, 223): one, (1, 151): one, (5,
70): one, (3, 106): one, (0, 5): one, (1, 137): one, (3, 112): one,
(4, 11): one, (5, 131): one, (1, 163): one, (5, 10): one, (3, 22):
one, (0, 180): one, (4, 17): one, (5, 173): one, (0, 170): one, (3,
167): one, (4, 63): one, (5, 183): one, (4, 160): one, (3, 77): one,
(1, 77): one, (1, 103): one, (3, 218): one, (4, 212): one, (0, 28):
one, (1, 130): one, (5, 105): one, (0, 149): one, (1, 25): one, (5,
140): one, (1, 164): one, (5, 115): one, (3, 31): one, (1, 51): one,
(4, 24): one, (2, 56): one, (0, 40): one, (4, 129): one, (5, 29): one,
(3, 37): one, (0, 161): one, (1, 213): one, (6, 18): one, (3, 172):
one, (4, 175): one, (5, 39): one, (0, 199): one, (1, 70): one, (0,
100): one, (4, 181): one, (5, 193): one, (6, 78): one, (4, 106): one,
(1, 120): one, (2, 102): one, (4, 211): one, (0, 19): one, (1, 155):
one, (5, 82): one, (6, 96): one, (3, 126): one, (4, 112): one, (2,
128): one, (1, 189): one, (6, 122): one, (0, 130): one, (3, 143): one,
(5, 159): one, (6, 156): one, (4, 45): one, (5, 185): one, (6, 182):
one, (3, 187): one, (4, 75): one, (1, 95): one, (0, 123): one, (4,
188): one, (1, 113): one, (5, 212): one, (1, 156): one, (5, 91): one,
(4, 127): one, (2, 16): one, (5, 101): one, (3, 13): one, (5, 15):
one, (6, 12): one, (5, 162): one, (4, 157): one, (5, 41): one, (6,
169): one, (3, 57): one, (0, 213): one, (1, 217): one, (6, 38): one,
(3, 160): one, (2, 94): one, (4, 187): one, (5, 51): one, (3, 70):
one, (2, 120): one, (0, 104): one, (4, 193): one, (5, 221): one, (1,
149): one, (6, 82): one, (2, 140): one, (5, 129): one, (0, 61): one,
(1, 161): one, (6, 142): one, (3, 24): one, (0, 182): one, (1, 56):
one, (4, 19): one, (5, 171): one, (0, 83): one, (5, 18): one, (6,
160): one, (0, 172): one, (1, 210): one, (3, 169): one, (5, 181): one,
(4, 162): one, (5, 60): one, (0, 194): one, (3, 79): one, (4, 71):
one, (1, 67): one, (5, 198): one, (5, 77): one, (3, 220): one, (1,
128): one, (5, 87): one, (6, 111): one, (5, 113): one, (3, 1): one,
(0, 141): one, (1, 49): one, (4, 131): one, (5, 27): one, (3, 39):
one, (0, 163): one, (3, 174): one, (4, 32): one, (0, 64): one, (4,
169): one, (5, 37): one, (1, 205): one, (6, 42): one, (3, 180): one,
(0, 102): one, (4, 183): one, (5, 207): one, (3, 90): one, (4, 221):
one, (3, 96): one, (4, 114): one, (1, 179): one, (1, 10): one, (4, 1):
one, (5, 157): one, (0, 33): one, (3, 44): one, (0, 186): one, (1,
44): one, (6, 11): one, (3, 151): one, (5, 167): one, (0, 71): one,
(6, 180): one, (3, 50): one, (0, 208): one, (1, 198): one, (2, 204):
one, (6, 45): one, (4, 53): one, (1, 93): one, (3, 67): one, (4, 83):
one, (3, 202): one, (4, 196): one, (1, 146): one, (5, 89): one, (4,
121): one, (1, 105): one, (3, 208): one, (1, 180): one, (5, 99): one,
(6, 115): one, (0, 155): one, (1, 3): one, (4, 8): one, (5, 134): one,
(5, 13): one, (3, 21): one, (1, 37): one, (6, 2): one, (4, 22): one,
(5, 160): one, (5, 23): one, (6, 175): one, (3, 59): one, (0, 215):
one, (1, 223): one, (4, 60): one, (2, 92): one, (4, 165): one, (5,
49): one, (6, 193): one, (0, 205): one, (6, 62): one, (4, 90): one,
(1, 72): one, (4, 195): one, (5, 219): one, (5, 66): one, (3, 110):
one, (2, 144): one, (3, 217): one, (0, 25): one, (1, 141): one, (6,
106): one, (2, 138): one, (5, 143): one, (0, 63): one, (1, 167): one,
(6, 140): one, (1, 62): one, (3, 133): one, (4, 29): one, (5, 169):
one, (0, 85): one, (4, 134): one, (5, 16): one, (0, 174): one, (1,
208): one, (2, 222): one, (6, 31): one, (5, 179): one, (3, 177): one,
(4, 65): one, (1, 65): one, (4, 202): one, (6, 210): one, (5, 75):
one, (6, 75): one, (4, 111): one, (1, 123): one, (4, 208): one, (5,
85): one, (3, 125): one, (1, 29): one, (0, 54): one, (5, 127): one,
(3, 3): one, (1, 55): one, (3, 138): one, (4, 4): one, (5, 146): one,
(2, 52): one, (4, 141): one, (5, 25): one, (6, 153): one, (0, 165):
one, (1, 41): one, (3, 144): one, (4, 34): one, (5, 188): one, (4,
171): one, (5, 35): one, (0, 219): one, (1, 195): one, (6, 40): one,
(4, 72): one, (1, 90): one, (0, 120): one, (5, 205): one, (4, 86):
one, (5, 215): one, (1, 159): one, (6, 100): one, (1, 177): one, (3,
8): one, (5, 155): one, (0, 35): one, (1, 171): one, (5, 2): one, (6,
144): one, (0, 188): one, (1, 34): one, (2, 208): one, (6, 9): one,
(3, 153): one, (4, 41): one, (5, 165): one, (5, 44): one, (1, 196):
one, (3, 191): one, (4, 55): one, (1, 83): one, (0, 127): one, (3,
69): one, (4, 93): one, (1, 117): one, (5, 208): one, (3, 107): one,
(4, 123): one, (0, 4): one, (5, 97): one, (0, 157): one, (5, 132):
one, (1, 172): one, (5, 11): one, (6, 139): one, (3, 23): one, (0,
179): one, (1, 59): one, (6, 0): one, (4, 16): one, (4, 153): one, (5,
21): one, (3, 61): one, (4, 62): one, (1, 84): one, (2, 90): one, (0,
118): one, (5, 63): one, (3, 74): one, (4, 205): one, (5, 217): one,
(5, 64): one, (2, 110): one, (1, 131): one, (5, 106): one, (6, 104):
one, (3, 118): one, (5, 141): one, (0, 49): one, (1, 165): one, (6,
130): one, (2, 162): one, (3, 135): one, (4, 31): one, (5, 151): one,
(0, 87): one, (4, 128): one, (5, 30): one, (6, 164): one, (0, 160):
one, (1, 214): one, (5, 177): one, (4, 174): one, (6, 208): one, (5,
73): one, (6, 73): one, (3, 89): one, (4, 105): one, (1, 121): one,
(3, 192): one, (4, 210): one, (1, 132): one, (5, 83): one, (4, 119):
one, (1, 19): one, (2, 24): one, (0, 8): one, (5, 125): one, (6, 133):
one, (0, 129): one, (1, 53): one, (3, 140): one, (2, 50): one, (4,
143): one, (5, 7): one, (3, 43): one, (1, 47): one, (3, 146): one, (4,
149): one, (5, 33): one, (4, 74): one, (4, 179): one, (5, 203): one,
(6, 203): one, (6, 64): one, (3, 94): one, (1, 114): one, (2, 96):
one, (3, 201): one, (5, 213): one, (1, 157): one, (5, 92): one, (6,
90): one, (4, 126): one, (2, 154): one, (0, 15): one, (3, 10): one,
(0, 152): one, (4, 13): one, (5, 153): one, (1, 32): one, (4, 43):
one, (5, 163): one, (0, 91): one, (4, 156): one, (3, 54): one, (4,
49): one, (1, 81): one, (0, 113): one, (4, 186): one, (5, 52): one,
(6, 194): one, (0, 202): one, (3, 71): one, (4, 95): one, (3, 206):
one, (4, 192): one, (5, 222): one, (5, 69): one, (3, 109): one, (4,
101): one, (1, 109): one, (3, 212): one, (5, 111): one, (6, 119): one,
(3, 115): one, (1, 7): one, (5, 130): one, (2, 4): one, (5, 9): one,
(0, 181): one, (1, 57): one, (3, 128): one, (4, 18): one, (0, 82):
one, (4, 155): one, (5, 19): one, (0, 171): one, (6, 24): one, (4,
56): one, (5, 182): one, (4, 161): one, (6, 50): one, (4, 207): one,
(5, 199): one, (6, 84): one, (1, 102): one, (3, 221): one, (4, 213):
one, (0, 29): one, (1, 129): one, (5, 104): one, (6, 110): one, (1,
24): one, (2, 134): one, (0, 51): one, (6, 128): one, (3, 30): one,
(0, 140): one, (2, 160): one, (3, 137): one, (4, 25): one, (5, 149):
one, (0, 41): one, (4, 130): one, (5, 28): one, (2, 218): one, (3,
175): one, (4, 39): one, (5, 191): one, (0, 79): one, (4, 168): one,
(6, 188): one, (1, 206): one, (1, 69): one, (5, 192): one, (4, 107):
one, (1, 127): one, (3, 194): one, (4, 220): one, (1, 154): one, (5,
81): one, (6, 97): one, (3, 97): one, (4, 113): one, (1, 17): one, (1,
188): one, (5, 123): one, (3, 7): one, (0, 131): one, (2, 48): one,
(5, 5): one, (3, 45): one, (5, 47): one, (6, 183): one, (1, 199): one,
(3, 186): one, (4, 52): one, (1, 94): one, (4, 189): one, (5, 201):
one, (3, 64): one, (1, 112): one, (3, 203): one, (4, 219): one, (5,
211): one, (5, 90): one, (0, 1): one, (1, 181): one, (5, 100): one,
(6, 114): one, (3, 12): one, (0, 154): one, (2, 178): one, (4, 15):
one, (5, 135): one, (6, 148): one, (3, 18): one, (6, 13): one, (5,
161): one, (0, 93): one, (5, 40): one, (3, 56): one, (0, 214): one,
(2, 198): one, (6, 39): one, (4, 51): one, (1, 87): one, (4, 164):
one, (6, 192): one, (0, 204): one, (3, 73): one, (0, 105): one, (6,
218): one, (1, 148): one, (5, 67): one, (3, 111): one, (4, 103): one,
(1, 99): one, (0, 24): one, (1, 142): one, (5, 109): one, (3, 117):
one, (0, 145): one, (1, 5): one, (5, 128): one, (1, 160): one, (5,
119): one, (6, 143): one, (3, 27): one, (1, 63): one, (6, 4): one, (3,
130): one, (4, 28): one, (2, 60): one, (0, 84): one, (4, 133): one,
(5, 17): one, (0, 173): one, (1, 209): one, (3, 168): one, (2, 86):
one, (0, 74): one, (4, 163): one, (5, 59): one, (6, 187): one, (0,
195): one, (6, 48): one, (3, 78): one, (4, 64): one, (2, 112): one,
(5, 197): one, (6, 221): one, (3, 84): one, (3, 223): one, (4, 215):
one, (1, 135): one, (5, 86): one, (1, 30): one, (5, 137): one, (0,
53): one, (1, 185): one, (5, 112): one, (3, 0): one, (5, 147): one,
(4, 140): one, (3, 38): one, (1, 42): one, (3, 145): one, (4, 33):
one, (5, 189): one, (0, 65): one, (1, 204): one, (6, 43): one, (3,
183): one, (4, 79): one, (1, 91): one, (0, 103): one, (5, 206): one,
(6, 212): one, (4, 85): one, (1, 125): one, (3, 196): one, (4, 222):
one, (0, 22): one, (5, 95): one, (3, 99): one, (4, 115): one, (1,
178): one, (5, 121): one, (3, 9): one, (4, 2): one, (2, 14): one, (4,
139): one, (5, 3): one, (6, 147): one, (3, 47): one, (1, 35): one, (4,
40): one, (2, 40): one, (5, 45): one, (0, 209): one, (1, 197): one,
(6, 34): one, (3, 188): one, (4, 54): one, (2, 66): one, (0, 126):
one, (5, 55): one, (6, 207): one, (4, 92): one, (4, 197): one, (5,
209): one, (1, 145): one, (3, 104): one, (4, 122): one, (1, 104): one,
(3, 211): one, (1, 139): one, (6, 112): one, (3, 14): one, (4, 9):
one, (5, 133): one, (1, 173): one, (6, 138): one, (0, 178): one, (2,
170): one, (3, 159): one, (4, 23): one, (5, 175): one, (0, 95): one,
(4, 152): one, (6, 172): one, (0, 168): one, (2, 196): one, (4, 61):
one, (1, 85): one, (6, 198): one, (3, 75): one, (4, 91): one, (5, 65):
one, (3, 81): one, (4, 97): one, (1, 140): one, (5, 107): one, (6,
107): one, (3, 119): one, (1, 27): one, (2, 0): one, (0, 48): one, (5,
117): one, (3, 132): one})
bits_before = 896
bits_after = 1568


## Ungraded Task
CTILDE = None

## Task 10
def correct(A):
    """
    Input: a matrix A each column of which differs from a codeword in at most one bit
    Output: a matrix whose columns are the corresponding valid codewords.
    Example:
        >>> A = Mat(({0,1,2,3,4,5,6}, {1,2,3}), {(0,3):one, (2, 1): one, (5, 2):one, (5,3):one, (0,2): one})
        >>> correct(A) == Mat(({0, 1, 2, 3, 4, 5, 6}, {1, 2, 3}), {(0, 1): 0, (1, 2): 0, (3, 2): 0, (1, 3): 0, (3, 3): 0, (5, 2): one, (6, 1): 0, (3, 1): 0, (2, 1): 0, (0, 2): one, (6, 3): one, (4, 2): 0, (6, 2): one, (2, 3): 0, (4, 3): 0, (2, 2): 0, (5, 1): 0, (0, 3): one, (4, 1): 0, (1, 1): 0, (5, 3): one})
        True
    """
    HA = H*A
    E = find_error_matrix(HA)
    return A+E

